name: NocoBase
version: 1.0.0
description: Plataforma low-code moderna para criar backends, APIs e pain√©is internos com banco de dados integrado.
author: Comunidade XPanel
website: https://nocobase.com
categories:
  - DevTool
icon: https://raw.githubusercontent.com/SxConnect/xinstala/main/apps/free/nocobase/icon.png
docker:
  compose:
    version: '3.8'
    services:
      app:
        image: nocobase/nocobase:main
        container_name: ${APP_NAME}_app
        restart: unless-stopped
        depends_on:
          - postgres
        environment:
          - DB_DIALECT=postgres
          - DB_HOST=postgres
          - DB_DATABASE=${POSTGRES_DB}
          - DB_USER=${POSTGRES_USER}
          - DB_PASSWORD=${POSTGRES_PASSWORD}
          - LOCAL_STORAGE_BASE_URL=/storage/uploads
          - APP_KEY=${APP_KEY}
          - INIT_ROOT_EMAIL=${ADMIN_EMAIL}
          - INIT_ROOT_PASSWORD=${ADMIN_PASSWORD}
          - INIT_ROOT_NICKNAME=Administrador
          - INIT_ROOT_USERNAME=admin
          - API_BASE_PATH=/api/
          - PROXY_TARGET_URL=https://${DOMAIN}
        volumes:
          - ${DATA_DIR}/storage:/app/nocobase/storage
        networks:
          - ${NETWORK}
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.${APP_NAME}.rule=Host(`${DOMAIN}`)"
          - "traefik.http.routers.${APP_NAME}.entrypoints=websecure"
          - "traefik.http.routers.${APP_NAME}.tls.certresolver=leresolver"
          - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=13000"
          - "traefik.docker.network=${NETWORK}"
      postgres:
        image: postgres:latest
        container_name: ${APP_NAME}_db
        restart: unless-stopped
        command: postgres -c wal_level=logical
        environment:
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_DB=${POSTGRES_DB}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
          - ${DATA_DIR}/postgres:/var/lib/postgresql/data
        networks:
          - ${NETWORK}
    volumes:
      storage: null
      postgres_data: null
networks:
  default:
    name: ${NETWORK}
    external: true