name: Hasura
version: 2.35.0
description: Plataforma GraphQL instant√¢nea para transformar bancos de dados em APIs com tempo real.
author: Comunidade XPanel
website: https://hasura.io
categories:
  - DevTool
icon: https://raw.githubusercontent.com/SxConnect/xinstala/main/apps/free/hasura/icon.png
docker:
  compose:
    version: '3.6'
    services:
      postgres:
        image: postgres:15
        restart: always
        environment:
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
          - ${DATA_DIR}/db:/var/lib/postgresql/data
        networks:
          - ${NETWORK}
      graphql-engine:
        image: hasura/graphql-engine:v2.35.0
        restart: always
        ports:
          - "8080:8080"
        depends_on:
          - postgres
          - data-connector-agent
        environment:
          HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
          HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
          HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
          PG_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
          HASURA_GRAPHQL_DEV_MODE: "true"
          HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
          HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
        networks:
          - ${NETWORK}
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.${APP_NAME}.rule=Host(`${DOMAIN}`)"
          - "traefik.http.routers.${APP_NAME}.entrypoints=websecure"
          - "traefik.http.routers.${APP_NAME}.tls.certresolver=leresolver"
          - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=8080"
          - "traefik.docker.network=${NETWORK}"
      data-connector-agent:
        image: hasura/graphql-data-connector:v2.35.0
        restart: always
        ports:
          - "8081:8081"
        environment:
          QUARKUS_LOG_LEVEL: ERROR
          QUARKUS_OPENTELEMETRY_ENABLED: "false"
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
          interval: 5s
          timeout: 10s
          retries: 5
          start_period: 5s
        networks:
          - ${NETWORK}
    volumes:
      db_data: null
networks:
  default:
    name: ${NETWORK}
    external: true